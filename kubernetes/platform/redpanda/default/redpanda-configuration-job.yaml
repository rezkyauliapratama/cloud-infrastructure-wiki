apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.4
  name: redpanda-configuration
  namespace: redpanda
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      containers:
      - args:
        - |
          set -e
          if [[ -n "$REDPANDA_LICENSE" ]] then
            rpk cluster license set "$REDPANDA_LICENSE"
          fi




          rpk cluster config export -f /tmp/cfg.yml


          for KEY in "${!RPK_@}"; do
            if ! [[ "$KEY" =~ ^(RPK_USER|RPK_PASS|RPK_SASL_MECHANISM)$ ]]; then
              config="${KEY#*RPK_}"
              rpk redpanda config set --config /tmp/cfg.yml "${config,,}" "${!KEY}"
            fi
          done


          rpk cluster config import -f /tmp/cfg.yml
        command:
        - bash
        - -c
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.4
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
      imagePullSecrets: null
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - configMap:
          name: redpanda
        name: config
